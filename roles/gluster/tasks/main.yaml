#--------------------
# Gluster Packages 
#  and daemons
#--------------------     

- name: ensure we have GlusterFS repos available
  copy: src=glusterfs-epel.repo  dest=/etc/yum.repos.d/glusterfs.repo owner=root group=root mode=0644

- name: install gluster packages
  yum: name={{ item }} state=installed
  environment: proxy_env
  with_items:
     - glusterfs-server
     - glusterfs-fuse

- name: restart gluster service
  action: service name=glusterd state=started

#---------------------------------
# Brick creation
#
# conditional on variable
#  make_gluster_loopback_brick == True
#
#----------------------------------

- name: setup directory for loopback gluster devices
  file: path={{ loopbacks_dir }} state=directory
  when: make_gluster_loopback_brick

- name: create a loopback file for Cinder
  shell: dd if=/dev/zero of={{ loopbacks_dir }}/cinder-block bs=1G count={{ gluster_brick_size }}
         creates={{ loopbacks_dir }}/cinder-block
  when: make_gluster_loopback_brick
  async: 3600
  poll: 5

- name: create a loopback file for a shared nova instances directory for nova instances
  shell: dd if=/dev/zero of={{ loopbacks_dir }}/nova-block bs=1G count={{ gluster_brick_size }}
         creates={{ loopbacks_dir }}/nova-block
  when: make_gluster_loopback_brick
  async: 3600
  poll: 5

- name: create a loopback file for swift
  shell: dd if=/dev/zero of={{ loopbacks_dir }}/swift-block bs=1G count={{ gluster_brick_size }}
         creates={{ loopbacks_dir }}/swift-block
  when: make_gluster_loopback_brick
  async: 3600
  poll: 5

# The following should really be a loopback module.

- name: deattach associated loop device
  shell: "DEV=$( losetup -a | grep {{ item }} | tail -1 | awk -F: '{print $1}') && losetup -d $DEV"   
  when: make_gluster_loopback_brick
  with_items:  [cinder, nova, swift]
  ignore_errors: yes

- name: create a loopback device for cinder
  shell: losetup -f {{ loopbacks_dir }}/cinder-block
  when: make_gluster_loopback_brick
  ignore_errors: yes

- name: create a loopback device for the nova dir
  shell: losetup -f {{ loopbacks_dir }}/nova-block
  when: make_gluster_loopback_brick
  ignore_errors: yes

- name: create a loopback device for the swift storage block
  shell: losetup -f {{ loopbacks_dir }}/swift-block
  when: make_gluster_loopback_brick
  ignore_errors: yes

#----------------------
# Brick mounting   
#---------------------

- name: setup a mount point for the brick
  file: path={{ item }} state=directory
  with_items: 
    - "{{ brick_mount_cinder }}"
    - "{{ brick_mount_nova }}"
    - "{{ brick_mount_swift }}"
  tags:
    - brick

- name: install xfs packages
  yum: name=xfsprogs state=installed

#
# Setup Cinder 
#

- name: read dev for cinder logical volume or loopback device 
  shell: |
    DEV=$( lvs | grep cinder | awk  '{ print "/dev/mapper/" $2 "-" $1 }' )
    if [ -z ${DEV} ]; then 
      DEV=$( losetup -a | grep cinder | tail -1 | awk -F: '{print $1}' )
    fi
    echo ${DEV}
  register: cinderdev

- name: format cinder brick FS for gluster (will fail if already formatted)
  shell: "mkfs.xfs -f -i size=512 {{ cinderdev.stdout }}"
  ignore_errors: yes
  tags:
    - brick

- name: create mount entry for the new cinder brick, and mount
  mount: name={{ brick_mount_cinder }} src={{ cinderdev.stdout }} fstype=xfs opts=defaults passno=2 state=mounted
  ignore_errors: yes
  tags:
    - brick

#
# Setup Nova 
#

- name: read dev for nova logical volume or loopback device 
  shell: |
    DEV=$( lvs | grep nova | awk  '{ print "/dev/mapper/" $2 "-" $1 }' )
    if [ -z ${DEV} ]; then 
      DEV=$( losetup -a | grep nova | tail -1 | awk -F: '{print $1}' )
    fi
    echo ${DEV}
  register: novadev

- name: format nova brick FS for gluster (will fail if already formatted)
  shell: "mkfs.xfs -f -i size=512 {{ novadev.stdout }}"
  ignore_errors: yes
  tags:
    - brick

- name: create mount entry for the new nova brick, and mount
  mount: name={{ brick_mount_nova}} src={{ novadev.stdout }} fstype=xfs opts=defaults passno=2 state=mounted
  ignore_errors: yes
  tags:
    - brick

#
# Setup Swift 
#

# - name: read dev for swift logical volume or loopback device 
#   shell: |
#     DEV=$( lvs | grep swift | awk  '{ print "/dev/mapper/" $2 "-" $1 }' )
#     if [ -z ${DEV} ]; then 
#       DEV=$( losetup -a | grep swift | tail -1 | awk -F: '{print $1}' )
#     fi
#     echo ${DEV}
#   register: swiftdev

# - name: format swift brick FS for gluster (will fail if already formatted)
#   shell: "mkfs.xfs -f -i size=512 {{ swiftdev.stdout }}"
#   ignore_errors: yes
#   tags:
#     - brick

# - name: create mount entry for the new swift brick, and mount
#   mount: name={{ brick_mount_swift}} src={{ swiftdev.stdout }} fstype=xfs opts=defaults passno=2 state=mounted
#   ignore_errors: yes
#   tags:
#     - brick

