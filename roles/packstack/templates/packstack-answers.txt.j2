[general]

{# Macro to create a CSV list of IP addresses #}

{% macro ip_list(groupname) -%}{% 

  for host in groups[groupname]

    %}{% set interface = hostvars[host]['primary_if'] 

    %}{{ hostvars[host]['ansible_'+interface]['ipv4']['address'] }}{% 
    
    if not loop.last %},{% endif %}{%

  endfor 
  
%}{%- endmacro %}

{% macro gluster_mnt_list(groupname, mntpnt) -%}{% 

  for host in groups[groupname] 

    %}{% set interface = hostvars[host]['primary_if'] 

    %}'{{ hostvars[host]['ansible_'+interface]['ipv4']['address'] }}:/cinder'{% 
    
    if not loop.last %},{% endif %}{%

  endfor 
  
%}{%- endmacro %}

# Path to a Public key to install on servers. If a usable key has not
# been installed on the remote servers the user will be prompted for a
# password and this key will be installed so the password will not be
# required again
CONFIG_SSH_KEY=/root/.ssh/id_rsa.kdump.pub

# Set to 'y' if you would like Packstack to install MySQL
CONFIG_MYSQL_INSTALL=y

# Set to 'y' if you would like Packstack to install OpenStack Image
# Service (Glance)
CONFIG_GLANCE_INSTALL=y

# Set to 'y' if you would like Packstack to install OpenStack Block
# Storage (Cinder)
CONFIG_CINDER_INSTALL=y

# Set to 'y' if you would like Packstack to install OpenStack Compute
# (Nova)
CONFIG_NOVA_INSTALL=y

# Set to 'y' if you would like Packstack to install OpenStack
# Networking (Neutron)
CONFIG_NEUTRON_INSTALL=y

# Set to 'y' if you would like Packstack to install OpenStack
# Dashboard (Horizon)
CONFIG_HORIZON_INSTALL=y

# Set to 'y' if you would like Packstack to install OpenStack Object
# Storage (Swift)
CONFIG_SWIFT_INSTALL=n

# Set to 'y' if you would like Packstack to install OpenStack
# Metering (Ceilometer)
CONFIG_CEILOMETER_INSTALL=y

# Set to 'y' if you would like Packstack to install Heat
CONFIG_HEAT_INSTALL=y

# Set to 'y' if you would like Packstack to install the OpenStack
# Client packages. An admin "rc" file will also be installed
CONFIG_CLIENT_INSTALL=y

# Comma separated list of NTP servers. Leave plain if Packstack
# should not install ntpd on instances.
CONFIG_NTP_SERVERS={{ ntp_server }}

# Set to 'y' if you would like Packstack to install Nagios to monitor
# openstack hosts
CONFIG_NAGIOS_INSTALL=y

# Comma separated list of servers to be excluded from installation in
# case you are running Packstack the second time with the same answer
# file and don't want Packstack to touch these servers. Leave plain if
# you don't need to exclude any server.
EXCLUDE_SERVERS=

# Set to 'y' if you want to run OpenStack services in debug mode. 
# Otherwise set to 'n'.
CONFIG_DEBUG_MODE=n  

#-----------------------------
#
# MySQL
#
#-----------------------------

# The IP address of the server on which to install MySQL
CONFIG_MYSQL_HOST={{ ip_list('openstack_controller') }}

# Username for the MySQL admin user
CONFIG_MYSQL_USER=root


#-----------------------------
#
# AMQP Service
#
#-----------------------------

# Set the server for the AMQP service
CONFIG_AMQP_SERVER=rabbitmq

# The IP address of the server on which to install the AMQP service
CONFIG_AMQP_HOST={{ ip_list('openstack_controller') }}

# Enable SSL for the AMQP service
CONFIG_AMQP_ENABLE_SSL=n

# Enable Authentication for the AMQP service
CONFIG_AMQP_ENABLE_AUTH=n

# The password for the NSS certificate database of the AMQP service
#CONFIG_AMQP_NSS_CERTDB_PW=5ef7f645606241eb909468f27a33e259

# The port in which the AMQP service listens to SSL connections
CONFIG_AMQP_SSL_PORT=5671

# The filename of the certificate that the AMQP service is going to
# use
CONFIG_AMQP_SSL_CERT_FILE=/etc/pki/tls/certs/amqp_selfcert.pem

# The filename of the private key that the AMQP service is going to
# use
CONFIG_AMQP_SSL_KEY_FILE=/etc/pki/tls/private/amqp_selfkey.pem

# Auto Generates self signed SSL certificate and key
CONFIG_AMQP_SSL_SELF_SIGNED=y

# User for amqp authentication
CONFIG_AMQP_AUTH_USER=amqp_user

# Password for user authentication
#CONFIG_AMQP_AUTH_PASSWORD=a432a0f4b9cb4d0c

# The IP address of the server on which to install the QPID service
CONFIG_QPID_HOST={{ ip_list('openstack_controller') }}

CONFIG_QPID_ENABLE_AUTH=n

# Enable SSL for the QPID service
CONFIG_QPID_ENABLE_SSL=n

# The password for the NSS certificate database of the QPID service
#CONFIG_QPID_NSS_CERTDB_PW=10fdb702ac7748b4a5fd8cb86c812c19

# The port in which the QPID service listens to SSL connections
CONFIG_QPID_SSL_PORT=5671

# The filename of the certificate that the QPID service is going to
# use
#CONFIG_QPID_SSL_CERT_FILE=/etc/pki/tls/certs/qpid_selfcert.pem

# The filename of the private key that the QPID service is going to
# use
#CONFIG_QPID_SSL_KEY_FILE=/etc/pki/tls/private/qpid_selfkey.pem

# Auto Generates self signed SSL certificate and key
#CONFIG_QPID_SSL_SELF_SIGNED=y


#-----------------------------
#
# Keystone
#
#-----------------------------


# The IP address of the server on which to install Keystone
CONFIG_KEYSTONE_HOST={{ ip_list('openstack_keystone') }}

# Kestone token format. Use either UUID or PKI
CONFIG_KEYSTONE_TOKEN_FORMAT=PKI


#-----------------------------
#
# Glance
#
#-----------------------------

# The IP address of the server on which to install Glance
CONFIG_GLANCE_HOST={{ ip_list('openstack_glance') }}


#-----------------------------
#
# Cinder
#
#-----------------------------

# The IP address of the server on which to install Cinder
CONFIG_CINDER_HOST={{ ip_list('openstack_cinder') }}

# The password to use for the Cinder to access DB
#CONFIG_CINDER_DB_PW=29e432f76d54438c

# The password to use for the Cinder to authenticate with Keystone
#CONFIG_CINDER_KS_PW=cd12e6350e114a6a

# The Cinder backend to use, valid options are: lvm, gluster, nfs
CONFIG_CINDER_BACKEND={{ cinder_backend }}

# Create Cinder's volumes group. This should only be done for testing
# on a proof-of-concept installation of Cinder.  This will create a
# file-backed volume group and is not suitable for production usage.
CONFIG_CINDER_VOLUMES_CREATE=y

# Cinder's volumes group size. Note that actual volume size will be
# extended with 3% more space for VG metadata.
CONFIG_CINDER_VOLUMES_SIZE={{ cinder_volume_size }}

# A single or comma separated list of gluster volume shares to mount,
# eg: ip-address:/vol-name
CONFIG_CINDER_GLUSTER_MOUNTS={{ gluster_mnt_list('gluster_nodes', mntpnt) }}

# A single or comma seprated list of NFS exports to mount, eg: ip-
# address:/export-name
CONFIG_CINDER_NFS_MOUNTS={{ ip_list('nfs_nodes') }}


#-----------------------------
#
# Nova
#
#-----------------------------

# The IP address of the server on which to install the Nova API
# service
CONFIG_NOVA_API_HOST={{ ip_list('openstack_controller') }}

# The IP address of the server on which to install the Nova Cert
# service
CONFIG_NOVA_CERT_HOST={{ ip_list('openstack_controller') }}

# The IP address of the server on which to install the Nova VNC proxy
CONFIG_NOVA_VNCPROXY_HOST={{ ip_list('openstack_controller') }}

# A comma separated list of IP addresses on which to install the Nova
# Compute services
CONFIG_NOVA_COMPUTE_HOSTS={{ ip_list('openstack_compute') }}

# The IP address of the server on which to install the Nova Conductor
# service
CONFIG_NOVA_CONDUCTOR_HOST={{ ip_list('openstack_controller') }}

# The IP address of the server on which to install the Nova Scheduler
# service
CONFIG_NOVA_SCHED_HOST={{ ip_list('openstack_controller') }}

# The overcommitment ratio for virtual to physical CPUs. Set to 1.0
# to disable CPU overcommitment
CONFIG_NOVA_SCHED_CPU_ALLOC_RATIO={{ cpu_alloc_ratio }}

# The overcommitment ratio for virtual to physical RAM. Set to 1.0 to
# disable RAM overcommitment
CONFIG_NOVA_SCHED_RAM_ALLOC_RATIO={{ ram_alloc_ratio }}

# Private interface for Flat DHCP on the Nova compute servers
CONFIG_NOVA_COMPUTE_PRIVIF={{ compute_private_if }}

# The IP address of the server on which to install the Nova Network
# service
#CONFIG_NOVA_NETWORK_HOST={{ ip_list('openstack_controller') }}

# Nova network manager
#CONFIG_NOVA_NETWORK_MANAGER=nova.network.manager.FlatDHCPManager

# Public interface on the Nova network server
#CONFIG_NOVA_NETWORK_PUBIF={{ public_if }}

# Private interface for network manager on the Nova network server
#CONFIG_NOVA_NETWORK_PRIVIF={{ network_private_if }}

# IP Range for network manager
#CONFIG_NOVA_NETWORK_FIXEDRANGE=192.168.32.0/22

# IP Range for Floating IP's
#CONFIG_NOVA_NETWORK_FLOATRANGE=10.3.4.0/22

# Name of the default floating pool to which the specified floating
# ranges are added to
#CONFIG_NOVA_NETWORK_DEFAULTFLOATINGPOOL=nova

# Automatically assign a floating IP to new instances
#CONFIG_NOVA_NETWORK_AUTOASSIGNFLOATINGIP=n

# First VLAN for private networks
#CONFIG_NOVA_NETWORK_VLAN_START=100

# Number of networks to support
#CONFIG_NOVA_NETWORK_NUMBER=1

# Number of addresses in each private subnet
#CONFIG_NOVA_NETWORK_SIZE=255

# Set to 'y' if you want to use VMware vCenter as hypervisor and
# storageOtherwise set to 'n'.
CONFIG_VMWARE_BACKEND=n

# The IP address of the VMware vCenter datastore
CONFIG_VCENTER_HOST=

# The username to authenticate to VMware vCenter datastore
CONFIG_VCENTER_USER=

# The password to authenticate to VMware vCenter datastore
CONFIG_VCENTER_PASSWORD=

# The name of the vCenter cluster
CONFIG_VCENTER_CLUSTER_NAME=


#-----------------------------
#
# Neutron
#
#-----------------------------

# The IP addresses of the server on which to install the Neutron
# server
CONFIG_NEUTRON_SERVER_HOST={{ ip_list('openstack_neutron') }}

# A comma separated list of IP addresses on which to install Neutron
# L3 agent
CONFIG_NEUTRON_L3_HOSTS={{ ip_list('openstack_neutron_l3') }}

# The name of the bridge that the Neutron L3 agent will use for
# external traffic, or 'provider' if using provider networks
CONFIG_NEUTRON_L3_EXT_BRIDGE=br-ex

# A comma separated list of IP addresses on which to install Neutron
# DHCP agent
CONFIG_NEUTRON_DHCP_HOSTS={{ ip_list('openstack_neutron_dhcp') }}

CONFIG_NEUTRON_LBAAS_HOSTS={{ ip_list('openstack_neutron_dhcp') }}

# The name of the L2 plugin to be used with Neutron
CONFIG_NEUTRON_L2_PLUGIN=openvswitch

# A comma separated list of IP addresses on which to install Neutron
# metadata agent
CONFIG_NEUTRON_METADATA_HOSTS={{ ip_list('openstack_neutron_meta') }}

# The type of network to allocate for tenant networks or the Neutron linuxbridge
# plugin
CONFIG_NEUTRON_LB_TENANT_NETWORK_TYPE=

# A comma separated list of VLAN ranges for the Neutron linuxbridge
# plugin
CONFIG_NEUTRON_LB_VLAN_RANGES=

# A comma separated list of interface mappings for the Neutron
# linuxbridge plugin
CONFIG_NEUTRON_LB_INTERFACE_MAPPINGS=

# Type of network to allocate for tenant networks
CONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE={{ tunnel_protocol }}

# A comma separated list of VLAN ranges for the Neutron openvswitch
# plugin
CONFIG_NEUTRON_OVS_VLAN_RANGES=

# A comma separated list of bridge mappings for the Neutron
# openvswitch plugin
#CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=br-tun
CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=

# A comma separated list of colon-separated OVS bridge:interface
# pairs. The interface will be added to the associated bridge.
#CONFIG_NEUTRON_OVS_BRIDGE_IFACES=br-int
CONFIG_NEUTRON_OVS_BRIDGE_IFACES=

# A comma separated list of tunnel ranges for the Neutron openvswitch
# plugin
#CONFIG_NEUTRON_OVS_TUNNEL_RANGES=1:1000
CONFIG_NEUTRON_OVS_TUNNEL_RANGES=1:4000

# Override the IP used for GRE tunnels on this hypervisor to the IP
# found on the specified interface (defaults to the HOST IP)
#CONFIG_NEUTRON_OVS_TUNNEL_IF={{ compute_private_if }}
CONFIG_NEUTRON_OVS_TUNNEL_IF=

# port for VXLAN
CONFIG_NEUTRON_OVS_VXLAN_UDP_PORT=4789

#-----------------------------
#
# Horizon
#
#-----------------------------

# The IP address of the server on which to install Horizon
CONFIG_HORIZON_HOST={{ ip_list('openstack_horizon') }}

# To set up Horizon communication over https set this to "y"
CONFIG_HORIZON_SSL=y

# PEM encoded certificate to be used for ssl on the https server,
# leave blank if one should be generated, this certificate should not
# require a passphrase
CONFIG_SSL_CERT=

# Keyfile corresponding to the certificate if one was entered
CONFIG_SSL_KEY=


#-----------------------------
#
# Swift
#
#-----------------------------

# The IP address on which to install the Swift proxy service
# (currently only single proxy is supported)
CONFIG_SWIFT_PROXY_HOSTS={{ ip_list('swift_proxy_nodes') }}

# A comma separated list of IP addresses on which to install the
# Swift Storage services, each entry should take the format
# <ipaddress>[/dev], for example 127.0.0.1/vdb will install /dev/vdb
# on 127.0.0.1 as a swift storage device(packstack does not create the
# filesystem, you must do this first), if /dev is omitted Packstack
# will create a loopback device for a test setup
CONFIG_SWIFT_STORAGE_HOSTS={{ ip_list('swift_storage_nodes') }}

# Number of swift storage zones, this number MUST be no bigger than
# the number of storage devices configured
CONFIG_SWIFT_STORAGE_ZONES=2

# Number of swift storage replicas, this number MUST be no bigger
# than the number of storage zones configured
CONFIG_SWIFT_STORAGE_REPLICAS=2

# FileSystem type for storage nodes
CONFIG_SWIFT_STORAGE_FSTYPE=ext4

CONFIG_SWIFT_STORAGE_SIZE={{ swift_volume_size }}


#-----------------------------
#
# Heat
#
#-----------------------------

# The IP address of the server on which to install Heat service
CONFIG_HEAT_HOST={{ ip_list('openstack_heat') }}

# Set to 'y' if you would like Packstack to install Heat CloudWatch
# API
CONFIG_HEAT_CLOUDWATCH_INSTALL=y

# Set to 'y' if you would like Packstack to install Heat
# CloudFormation API
CONFIG_HEAT_CFN_INSTALL=y

# The IP address of the server on which to install Heat CloudWatch
# API service
CONFIG_HEAT_CLOUDWATCH_HOST={{ ip_list('openstack_heat') }}

# The IP address of the server on which to install Heat
# CloudFormation API service
CONFIG_HEAT_CFN_HOST={{ ip_list('openstack_heat') }}


#-----------------------------
#
# Ceilometer
#
#-----------------------------

# The IP address of the server on which to install Ceilometer
CONFIG_CEILOMETER_HOST={{ ip_list('openstack_heat') }}
CONFIG_MONGODB_HOST={{ ip_list('openstack_heat') }}

#-----------------------------
#
# Miscellaneous
#
#-----------------------------

# The IP address of the server on which to install the OpenStack
# client packages. An admin "rc" file will also be installed
CONFIG_OSCLIENT_HOST={{ ip_list('openstack_controller') }}

# Whether to provision for demo usage and testing
CONFIG_PROVISION_DEMO=n

# The CIDR network address for the floating IP subnet
CONFIG_PROVISION_DEMO_FLOATRANGE=172.24.4.224/28

# Whether to configure tempest for testing
CONFIG_PROVISION_TEMPEST=y

# The uri of the tempest git repository to use
CONFIG_PROVISION_TEMPEST_REPO_URI=https://github.com/redhat-openstack/tempest.git

# The revision of the tempest git repository to use
CONFIG_PROVISION_TEMPEST_REPO_REVISION=master

# Whether to configure the ovs external bridge in an all-in-one
# deployment
CONFIG_PROVISION_ALL_IN_ONE_OVS_BRIDGE=n


# To subscribe each server to EPEL enter "y"
CONFIG_USE_EPEL=n

# A comma separated list of URLs to any additional yum repositories
# to install
CONFIG_REPO=

# The IP address of the server on which to install the Nagios server
CONFIG_NAGIOS_HOST={{ ip_list('openstack_heat') }}


#-----------------------------
#
# RHEL-specific stuff
#
#-----------------------------

# To subscribe each server with Red Hat subscription manager, include
# this with CONFIG_RH_PW
CONFIG_RH_USER=

# To subscribe each server with Red Hat subscription manager, include
# this with CONFIG_RH_USER
CONFIG_RH_PW=

# To subscribe each server to Red Hat Enterprise Linux 6 Server Beta
# channel (only needed for Preview versions of RHOS) enter "y"
CONFIG_RH_BETA_REPO=n

# To subscribe each server with RHN Satellite,fill Satellite's URL
# here. Note that either satellite's username/password or activation
# key has to be provided
CONFIG_SATELLITE_URL=

# Username to access RHN Satellite
CONFIG_SATELLITE_USER=

# Password to access RHN Satellite
CONFIG_SATELLITE_PW=

# Activation key for subscription to RHN Satellite
CONFIG_SATELLITE_AKEY=

# Specify a path or URL to a SSL CA certificate to use
CONFIG_SATELLITE_CACERT=

# If required specify the profile name that should be used as an
# identifier for the system in RHN Satellite
CONFIG_SATELLITE_PROFILE=




